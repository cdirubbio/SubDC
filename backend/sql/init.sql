CREATE DATABASE subdc;

USE subdc;

CREATE TABLE Users (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(15) UNIQUE NOT NULL,
    email VARCHAR(50) UNIQUE NOT NULL,
    password VARCHAR(25) NOT NULL,
    first_name VARCHAR(20),
    last_name VARCHAR(20),
    phone_number VARCHAR(11),
    email_is_verified BOOLEAN,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE Listings (
    listing_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    title VARCHAR(100) NOT NULL,
    description TEXT NOT NULL,
    apt_type ENUM('studio', '1br', '2br') NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    address VARCHAR(255) NOT NULL,
    zip_code VARCHAR(10),
    availability_start DATE NOT NULL,
    availability_end DATE NOT NULL,
    image1 VARCHAR(255) NOT NULL,
    image2 VARCHAR(255) NOT NULL,
    reserved_by INT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES Users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (reserved_by) REFERENCES Users(user_id) ON DELETE SET NULL
);

CREATE TABLE Favorites (
    user_id INT NOT NULL,
    listing_id INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (user_id, listing_id),
    FOREIGN KEY (user_id) REFERENCES Users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (listing_id) REFERENCES Listings(listing_id) ON DELETE CASCADE
);

CREATE TABLE UserNotifications (
    notification_id INT AUTO_INCREMENT PRIMARY KEY,
    owner_user_id INT NOT NULL,
    user_id INT NOT NULL,
    listing_id INT NOT NULL,
    listing_action ENUM('favorite', 'unfavorite', 'reserve', 'unreserve') NOT NULL,
    visible BOOLEAN NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (owner_user_id) REFERENCES Users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES Users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (listing_id) REFERENCES Listings(listing_id) ON DELETE CASCADE
);


----Class
CREATE TABLE Manufacturer (
	MANUFAC_ID VARCHAR(6) PRIMARY KEY,
	MANUFAC_NAME VARCHAR(50)
);
CREATE TABLE Products (
	PRODUCT_NUM VARCHAR(5) PRIMARY KEY,
	PRODUCT_NAME VARCHAR(50),
	QUANTITY VARCHAR(5), 
	MANUFAC_ID VARCHAR(6),
	FOREIGN KEY (MANUFAC_ID) REFERENCES Manufacturer(MANUFAC_ID) ON DELETE CASCADE
);

INSERT INTO Manufacturer (MANUFAC_ID, MANUFAC_NAME) VALUES ('M0001', 'Apple');
INSERT INTO Manufacturer (MANUFAC_ID, MANUFAC_NAME) VALUES ('M0002','Samsung');
INSERT INTO Manufacturer (MANUFAC_ID, MANUFAC_NAME) VALUES ('M0003', 'Dell');
INSERT INTO Manufacturer (MANUFAC_ID, MANUFAC_NAME) VALUES ('M0004', 'Google');
INSERT INTO Manufacturer (MANUFAC_ID, MANUFAC_NAME) VALUES ('M0005', 'Microsoft');


INSERT INTO Products (PRODUCT_NUM, PRODUCT_NAME, QUANTITY, MANUFAC_ID) VALUES ('P001', 'iPad', 500, 'M0001');
INSERT INTO Products (PRODUCT_NUM, PRODUCT_NAME, QUANTITY, MANUFAC_ID) VALUES ('P002', 'iPhone', 200, 'M0001');
INSERT INTO Products (PRODUCT_NUM, PRODUCT_NAME, QUANTITY, MANUFAC_ID) VALUES ('P003', 'Galaxy', 100, 'M0002');
INSERT INTO Products (PRODUCT_NUM, PRODUCT_NAME, QUANTITY, MANUFAC_ID) VALUES ('P004', 'Latitude Laptop', 250, 'M0003');
INSERT INTO Products (PRODUCT_NUM, PRODUCT_NAME, QUANTITY, MANUFAC_ID) VALUES ('P005', 'Macbook Pro', 50, 'M0001');

SELECT * FROM Products;
SELECT * FROM Manufacturer;

SELECT p.PRODUCT_NUM, p.PRODUCT_NAME, p.QUANTITY, p.MANUFAC_ID, m.MANUFAC_NAME
FROM Products p 
JOIN Manufacturer m 
ON p.MANUFAC_ID = m.MANUFAC_ID;

SELECT p.PRODUCT_NUM, p.PRODUCT_NAME, p.QUANTITY, p.MANUFAC_ID, m.MANUFAC_NAME
FROM Products p 
JOIN Manufacturer m 
ON p.MANUFAC_ID = m.MANUFAC_ID
WHERE p.QUANTITY >= 200;

SELECT p.PRODUCT_NAME, m.MANUFAC_NAME
FROM Products p 
JOIN Manufacturer m 
ON p.MANUFAC_ID = m.MANUFAC_ID
WHERE p.QUANTITY > 95 AND p.QUANTITY < 500;